<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <packaging>war</packaging>
  <version>0.1.0-SNAPSHOT</version>

  <groupId>br.com.ocemanagerws</groupId>
  <artifactId>ocemanagerws</artifactId>

  <properties>
    <appengine.maven.plugin.version>2.4.1</appengine.maven.plugin.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
    <maven.compiler.showDeprecation>true</maven.compiler.showDeprecation>
    <jersey.version>2.35</jersey.version>
    <spring.version>5.3.10</spring.version>
    <spring.security.version>5.5.2</spring.security.version>
    <log4j.version>2.14.1</log4j.version>
    <hibernate.version>5.5.7.Final</hibernate.version>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>com.google.cloud</groupId>
        <artifactId>libraries-bom</artifactId>
        <version>23.0.0</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <!-- Compile/runtime dependencies -->
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>javax.servlet-api</artifactId>
      <version>3.1.0</version>
      <scope>provided</scope>
    </dependency>
    
    <dependency>
      <groupId>jstl</groupId>
      <artifactId>jstl</artifactId>
      <version>1.2</version>
    </dependency>

    <!-- Test Dependencies -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.12</version>
      <scope>test</scope>
    </dependency>
    
    <!-- Jersey Container Servlet-->
	<dependency>
	    <groupId>org.glassfish.jersey.containers</groupId>
	    <artifactId>jersey-container-servlet</artifactId>
	    <version>${jersey.version}</version>
	</dependency> 
	
	<!-- Jersey Server -->
	<dependency>
          <groupId>org.glassfish.jersey.core</groupId>
          <artifactId>jersey-server</artifactId>
          <version>${jersey.version}</version>
     </dependency>
     
     <!-- Jersey hk2 -->
	<dependency>
	    <groupId>org.glassfish.jersey.inject</groupId>
	    <artifactId>jersey-hk2</artifactId>
	    <version>${jersey.version}</version>
	    <exclusions>
	    	<exclusion>
	    		<groupId>org.glassfish.hk2.external</groupId>
	    		<artifactId>aopalliance-repackaged</artifactId>
	    	</exclusion>
	    </exclusions>
	</dependency> 
     
     
     <!-- Jackson -->
	<dependency>
	    <groupId>org.glassfish.jersey.media</groupId>
	    <artifactId>jersey-media-json-jackson</artifactId>
	    <version>${jersey.version}</version>
	    <exclusions>
	    	<exclusion>
	    		<groupId>jakarta.activation</groupId>
	    		<artifactId>jakarta.activation-api</artifactId>
	    	</exclusion>
	    	<exclusion>
	    		<groupId>jakarta.xml.bind</groupId>
	    		<artifactId>jakarta.xml.bind-api</artifactId>
	    	</exclusion>
	    </exclusions>
	</dependency>

     
     <!-- Spring Web -->
	<dependency>
	    <groupId>org.springframework</groupId>
	    <artifactId>spring-web</artifactId>
	    <version>${spring.version}</version>
	    <scope>compile</scope>
	</dependency>
	
	<!-- Jersey Spring 5 -->
	<dependency>
	    <groupId>org.glassfish.jersey.ext</groupId>
	    <artifactId>jersey-spring5</artifactId>
	    <version>${jersey.version}</version>
	</dependency>
	
	<!-- Spring ORM -->
    <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-orm</artifactId>
        <version>${spring.version}</version>
    </dependency>
    
    <!-- Spring Security Crypto -->
	<dependency>
	    <groupId>org.springframework.security</groupId>
	    <artifactId>spring-security-crypto</artifactId>
	    <version>${spring.security.version}</version>
	</dependency>    
    
    <!-- Spring Data JPA -->
	<dependency>
	    <groupId>org.springframework.data</groupId>
	    <artifactId>spring-data-jpa</artifactId>
	    <version>2.5.5</version>
	</dependency>
	
	<!-- Hibernate Core -->
	<dependency>
	    <groupId>org.hibernate</groupId>
	    <artifactId>hibernate-core</artifactId>
	    <version>${hibernate.version}</version>
	</dependency>
	
	<!-- Hibernate Ehcache -->
	<dependency>
	    <groupId>org.hibernate</groupId>
	    <artifactId>hibernate-ehcache</artifactId>
	    <version>${hibernate.version}</version>
	</dependency>
	
	<!-- Commons dbcp2 -->
	<dependency>
	    <groupId>org.apache.commons</groupId>
	    <artifactId>commons-dbcp2</artifactId>
	    <version>2.9.0</version>
	    <exclusions>
	    	<exclusion>
	    		<groupId>commons-logging</groupId>
	    		<artifactId>commons-logging</artifactId>
	    	</exclusion>
	    </exclusions>
	</dependency>
	
	<!-- Postgresql -->
	<dependency>
	    <groupId>org.postgresql</groupId>
	    <artifactId>postgresql</artifactId>
	    <version>42.2.23</version>
	</dependency>
	
	<!-- Log4j Api -->
	<dependency>
	    <groupId>org.apache.logging.log4j</groupId>
	    <artifactId>log4j-api</artifactId>
	    <version>${log4j.version}</version>
	</dependency>
	
	<!-- Log4j Core -->
	<dependency>
	    <groupId>org.apache.logging.log4j</groupId>
	    <artifactId>log4j-core</artifactId>
	    <version>${log4j.version}</version>
	</dependency>
	
	<!-- Log4j Slf4j Impl -->
	<dependency>
	    <groupId>org.apache.logging.log4j</groupId>
	    <artifactId>log4j-slf4j-impl</artifactId>
	    <version>${log4j.version}</version>
	</dependency>	
	
	<!-- Logback-Classic -->
	<dependency>
	    <groupId>ch.qos.logback</groupId>
	    <artifactId>logback-classic</artifactId>
	    <version>1.2.6</version>
	    <scope>test</scope>
	</dependency>
		  
  </dependencies>

  <build>
    <!-- for hot reload of the web application-->
    <outputDirectory>${project.build.directory}/${project.build.finalName}/WEB-INF/classes</outputDirectory>
    <plugins>
      <plugin>
        <groupId>com.google.cloud.tools</groupId>
        <artifactId>appengine-maven-plugin</artifactId>
        <version>${appengine.maven.plugin.version}</version>
      </plugin>
      
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <version>3.0.0-M3</version>
        <executions>
          <execution>
            <id>enforce-maven</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <!-- appengine-maven-plugin requires Maven 3.5.0 or later -->
                <requireMavenVersion>
                  <version>3.5.0</version>
                </requireMavenVersion>
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
	    <groupId>org.apache.maven.plugins</groupId>
	    <artifactId>maven-war-plugin</artifactId>
	    <version>3.3.1</version>
   	  </plugin>
    </plugins>
  </build>
</project>
